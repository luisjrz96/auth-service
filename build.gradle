plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.0'
	id 'io.spring.dependency-management' version '1.1.6'
	id "com.diffplug.spotless" version "6.8.0"
	id "org.flywaydb.flyway" version "11.0.0"

}

group = 'com.luisjrz96'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation "org.flywaydb:flyway-database-postgresql"
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

spotless {
	java {
		removeUnusedImports()
		googleJavaFormat("1.23.0")
		indentWithTabs(2)
		indentWithSpaces(4)
	}
}

tasks.register('updateGitHooks', Copy) {
	from './scripts/git/pre-commit'
	into './.git/hooks'
}

tasks.register('runPreCommitHook', Exec) {
	commandLine 'sh', '-c', '.git/hooks/pre-commit'
}

flyway {
	// The information here is hardcoded, however, for real use case it should be using env variables
	url = 'jdbc:postgresql://localhost:5432/auth_app'
	user = 'postgres'
	password = 'admin'
	locations = ['classpath:db/migrations/', 'classpath:db/seeds/']
}

tasks.named('test') {
	useJUnitPlatform()
}

compileJava.dependsOn updateGitHooks
runPreCommitHook.dependsOn updateGitHooks
compileJava.dependsOn runPreCommitHook